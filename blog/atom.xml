<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>openradarscience.org</id>
  <title>Open Radar Science</title>
  <updated>2022-08-30T21:13:24.907050+00:00</updated>
  <link href="openradarscience.org"/>
  <link href="openradarscience.org/blog/atom.xml" rel="self"/>
  <generator uri="https://ablog.readthedocs.org/" version="0.10.29">ABlog</generator>
  <entry>
    <id>openradarscience.org/posts/packages/artview/</id>
    <title>ARTView</title>
    <updated>2017-09-16T00:00:00+00:00</updated>
    <author>
      <name>openradar</name>
    </author>
    <content type="html">&lt;div class="ablog-post-excerpt docutils container"&gt;
&lt;p&gt;Visualization tool leveraging PyArt package. Allows browsing data and accessing some PyArt calculations. Also working toward Solo-like editing alternative.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/nguy/artview"&gt;https://github.com/nguy/artview&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content>
    <link href="openradarscience.org/posts/packages/artview/" rel="alternate"/>
    <summary>Visualization tool leveraging PyArt package. Allows browsing data and accessing some PyArt calculations. Also working toward Solo-like editing alternative.https://github.com/nguy/artview</summary>
    <category term="devel" label="devel"/>
    <category term="project" label="project"/>
    <published>2017-09-16T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>openradarscience.org/posts/packages/mmm-py/</id>
    <title>MMM-Py</title>
    <updated>2017-09-16T00:00:00+00:00</updated>
    <author>
      <name>openradar</name>
    </author>
    <content type="html">&lt;div class="ablog-post-excerpt docutils container"&gt;
&lt;p&gt;The National Oceanic and Atmospheric Administration (NOAA) regularly produces national 3D radar reflectivity mosaics via its Multi-Radar/Multi-Sensor (MRMS) system. These mosaics are wonderful for storm and precipitation analysis and research, but they are distributed in odd formats that NOAA is ever changing. Sometimes you just want to read a file and make a plot! This is what MMM-Py is for. With it, you can read any version of the MRMS radar mosaics, past or present, and you can analyze, plot, subsection, and output custom mosaics of your own, which MMM-Py can ingest later. MMM-Py is free and open source. It is capable of producing publication-ready figures and analyses, but it also can do quicklook plots so you can check out the cool storm that just happened.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/nasa/MMM-Py"&gt;https://github.com/nasa/MMM-Py&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content>
    <link href="openradarscience.org/posts/packages/mmm-py/" rel="alternate"/>
    <summary>The National Oceanic and Atmospheric Administration (NOAA) regularly produces national 3D radar reflectivity mosaics via its Multi-Radar/Multi-Sensor (MRMS) system. These mosaics are wonderful for storm and precipitation analysis and research, but they are distributed in odd formats that NOAA is ever changing. Sometimes you just want to read a file and make a plot! This is what MMM-Py is for. With it, you can read any version of the MRMS radar mosaics, past or present, and you can analyze, plot, subsection, and output custom mosaics of your own, which MMM-Py can ingest later. MMM-Py is free and open source. It is capable of producing publication-ready figures and analyses, but it also can do quicklook plots so you can check out the cool storm that just happened.https://github.com/nasa/MMM-Py</summary>
    <category term="devel" label="devel"/>
    <category term="project" label="project"/>
    <published>2017-09-16T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>openradarscience.org/posts/packages/multidop/</id>
    <title>MultiDop</title>
    <updated>2017-09-16T00:00:00+00:00</updated>
    <author>
      <name>openradar</name>
    </author>
    <content type="html">&lt;div class="ablog-post-excerpt docutils container"&gt;
&lt;p&gt;MultiDop is a Python-based interface between the C-based DDA code developed at University of Oklahoma and the Python Atmospheric Radiation Measurement Radar Toolkit (Py-ART) software developed at Argonne National Lab. Use this software to perform 3D wind analyses using 2-3 independent Doppler radars.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/nasa/MultiDop"&gt;https://github.com/nasa/MultiDop&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content>
    <link href="openradarscience.org/posts/packages/multidop/" rel="alternate"/>
    <summary>MultiDop is a Python-based interface between the C-based DDA code developed at University of Oklahoma and the Python Atmospheric Radiation Measurement Radar Toolkit (Py-ART) software developed at Argonne National Lab. Use this software to perform 3D wind analyses using 2-3 independent Doppler radars.https://github.com/nasa/MultiDop</summary>
    <category term="devel" label="devel"/>
    <category term="project" label="project"/>
    <published>2017-09-16T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>openradarscience.org/posts/packages/osswrvm/</id>
    <title>Open Source Weather Radar Virtual Machine</title>
    <updated>2017-09-16T00:00:00+00:00</updated>
    <author>
      <name>openradar</name>
    </author>
    <content type="html">&lt;div class="ablog-post-excerpt docutils container"&gt;
&lt;p&gt;This projects creates a Linux Virtual Machine image (VM) with a number of open source weather radar software packages (BALTRAD, Py-ART, Radx, RSL, and wradlib) which can be run using VirtualBox on a number of host OSes.&lt;/p&gt;
&lt;p&gt;The creation of this VM has been tested on Ubuntu 12.04 and Mac OS X 10.9 hosts running vagrant 1.5.4. Other host should be supported if a recent version of vagrant (1.3+) and VirtualBox can be installed.&lt;/p&gt;
&lt;/div&gt;
</content>
    <link href="openradarscience.org/posts/packages/osswrvm/" rel="alternate"/>
    <summary>This projects creates a Linux Virtual Machine image (VM) with a number of open source weather radar software packages (BALTRAD, Py-ART, Radx, RSL, and wradlib) which can be run using VirtualBox on a number of host OSes.The creation of this VM has been tested on Ubuntu 12.04 and Mac OS X 10.9 hosts running vagrant 1.5.4. Other host should be supported if a recent version of vagrant (1.3+) and VirtualBox can be installed.</summary>
    <category term="devel" label="devel"/>
    <category term="project" label="project"/>
    <published>2017-09-16T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>openradarscience.org/posts/packages/pyradarmet/</id>
    <title>PyRadarMet</title>
    <updated>2017-09-16T00:00:00+00:00</updated>
    <author>
      <name>openradar</name>
    </author>
    <content type="html">&lt;div class="ablog-post-excerpt docutils container"&gt;
&lt;p&gt;A python package that computes various fundamental characteristics for use in radar meteorology.&lt;/p&gt;
&lt;p&gt;Meant to process Level 1.5 to Level 2 data.&lt;/p&gt;
&lt;/div&gt;
</content>
    <link href="openradarscience.org/posts/packages/pyradarmet/" rel="alternate"/>
    <summary>A python package that computes various fundamental characteristics for use in radar meteorology.Meant to process Level 1.5 to Level 2 data.</summary>
    <category term="devel" label="devel"/>
    <category term="project" label="project"/>
    <published>2017-09-16T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>openradarscience.org/posts/packages/pytda/</id>
    <title>PyTDA</title>
    <updated>2017-09-16T00:00:00+00:00</updated>
    <author>
      <name>nasa</name>
    </author>
    <content type="html">&lt;div class="ablog-post-excerpt docutils container"&gt;
&lt;p&gt;This software provides Python functions that will estimate turbulence from Doppler radar data ingested via Py-ART. Specifically, this software will estimate the cubic root of eddy dissipation rate, given input radar data containing reflectivity and spectrum width. Can be done on an individual sweep basis or by processing a full volume at once. If the latter, a new turbulence field is created within the Py-ART radar object. The turbulence algorithm is based on the NCAR Turbulence Detection Algorithm (NTDA), adapted to work with a single radar.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/nasa/PyTDA"&gt;https://github.com/nasa/PyTDA&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content>
    <link href="openradarscience.org/posts/packages/pytda/" rel="alternate"/>
    <summary>This software provides Python functions that will estimate turbulence from Doppler radar data ingested via Py-ART. Specifically, this software will estimate the cubic root of eddy dissipation rate, given input radar data containing reflectivity and spectrum width. Can be done on an individual sweep basis or by processing a full volume at once. If the latter, a new turbulence field is created within the Py-ART radar object. The turbulence algorithm is based on the NCAR Turbulence Detection Algorithm (NTDA), adapted to work with a single radar.https://github.com/nasa/PyTDA</summary>
    <category term="devel" label="devel"/>
    <category term="project" label="project"/>
    <published>2017-09-16T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>openradarscience.org/posts/packages/rsl/</id>
    <title>RSL</title>
    <updated>2017-09-16T00:00:00+00:00</updated>
    <author>
      <name>openradar</name>
    </author>
    <content type="html">&lt;div class="ablog-post-excerpt docutils container"&gt;
&lt;p&gt;NASA’s Radar Software Library (RSL) was developed to support the Tropical Rainfall Measuring Mission (TRMM). It is designed to read data from a variety of weather radar formats into a uniform structure, and provide tools for working with the data. It is written in the C language.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://trmm-fc.gsfc.nasa.gov/trmm_gv/software/rsl/"&gt;https://trmm-fc.gsfc.nasa.gov/trmm_gv/software/rsl/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content>
    <link href="openradarscience.org/posts/packages/rsl/" rel="alternate"/>
    <summary>NASA’s Radar Software Library (RSL) was developed to support the Tropical Rainfall Measuring Mission (TRMM). It is designed to read data from a variety of weather radar formats into a uniform structure, and provide tools for working with the data. It is written in the C language.https://trmm-fc.gsfc.nasa.gov/trmm_gv/software/rsl/</summary>
    <category term="devel" label="devel"/>
    <category term="project" label="project"/>
    <published>2017-09-16T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>openradarscience.org/posts/packages/rsl_in_idl/</id>
    <title>RSL in IDL</title>
    <updated>2017-09-16T00:00:00+00:00</updated>
    <author>
      <name>openradar</name>
    </author>
    <content type="html">&lt;div class="ablog-post-excerpt docutils container"&gt;
&lt;p&gt;RSL in IDL is a package of routines for working with TRMM Ground Validation radar data. The programs and data structures are modeled on TRMM GV’s C-based Radar Software Library (RSL), but are written in the Interactive Data Language (IDL). The idea is to provide the utility of RSL in an IDL environment.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://trmm-fc.gsfc.nasa.gov/trmm_gv/software/rsl_in_idl/RSL_in_IDL.php"&gt;https://trmm-fc.gsfc.nasa.gov/trmm_gv/software/rsl_in_idl/RSL_in_IDL.php&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content>
    <link href="openradarscience.org/posts/packages/rsl_in_idl/" rel="alternate"/>
    <summary>RSL in IDL is a package of routines for working with TRMM Ground Validation radar data. The programs and data structures are modeled on TRMM GV’s C-based Radar Software Library (RSL), but are written in the Interactive Data Language (IDL). The idea is to provide the utility of RSL in an IDL environment.https://trmm-fc.gsfc.nasa.gov/trmm_gv/software/rsl_in_idl/RSL_in_IDL.php</summary>
    <category term="devel" label="devel"/>
    <category term="project" label="project"/>
    <published>2017-09-16T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>openradarscience.org/posts/packages/radartoolsarcgis/</id>
    <title>Radar Tools for ArcGIS</title>
    <updated>2017-09-16T00:00:00+00:00</updated>
    <author>
      <name>openradar</name>
    </author>
    <content type="html">&lt;div class="ablog-post-excerpt docutils container"&gt;
&lt;p&gt;This tools enable ArcGIS to order, download and visualize Level II and Level III data in vector and raster formats.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://bitbucket.org/striges/radar-tools"&gt;https://bitbucket.org/striges/radar-tools&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content>
    <link href="openradarscience.org/posts/packages/radartoolsarcgis/" rel="alternate"/>
    <summary>This tools enable ArcGIS to order, download and visualize Level II and Level III data in vector and raster formats.https://bitbucket.org/striges/radar-tools</summary>
    <category term="devel" label="devel"/>
    <category term="project" label="project"/>
    <published>2017-09-16T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>openradarscience.org/posts/packages/wradlib/</id>
    <title>Wradlib</title>
    <updated>2017-09-16T00:00:00+00:00</updated>
    <author>
      <name>openradar</name>
    </author>
    <content type="html">&lt;div class="ablog-post-excerpt docutils container"&gt;
&lt;p&gt;&lt;a class="reference external" href="https://wradlib.org/"&gt;wradlib&lt;/a&gt; was one of the first open source software solutions to support all essential steps of the weather radar processing chain. Since 2011, wradlib has evolved to be a professional solution for interactive weather radar data analysis and operational processing, with a large international user community in academia, government agencies, and the private sector. The &lt;a class="reference external" href="https://groups.google.com/forum/?fromgroups#!forum/wradlib-users"&gt;user forum&lt;/a&gt; with more than 170 active members from all around the world provides an agile platform for exchange and support.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://wradlib.org/"&gt;https://wradlib.org/&lt;/a&gt;&lt;/p&gt;
&lt;img alt="wradlib sample image" src="../_images/wradlib_sample.png" /&gt;
&lt;/div&gt;
</content>
    <link href="openradarscience.org/posts/packages/wradlib/" rel="alternate"/>
    <summary>wradlib was one of the first open source software solutions to support all essential steps of the weather radar processing chain. Since 2011, wradlib has evolved to be a professional solution for interactive weather radar data analysis and operational processing, with a large international user community in academia, government agencies, and the private sector. The user forum with more than 170 active members from all around the world provides an agile platform for exchange and support.https://wradlib.org/wradlib sample image</summary>
    <published>2017-09-16T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>openradarscience.org/posts/2017/ors_webpage_announcment/</id>
    <title>openradarscience.org is online</title>
    <updated>2017-09-19T00:00:00+00:00</updated>
    <author>
      <name>openradar</name>
    </author>
    <content type="html">&lt;div class="ablog-post-excerpt docutils container"&gt;
&lt;p&gt;The open source software community specializing in weather radar has it’s new web site up and running.&lt;/p&gt;
&lt;/div&gt;
</content>
    <link href="openradarscience.org/posts/2017/ors_webpage_announcment/" rel="alternate"/>
    <summary>The open source software community specializing in weather radar has it’s new web site up and running.</summary>
    <category term="news" label="news"/>
    <published>2017-09-19T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>openradarscience.org/posts/2018/announce_erad2018/</id>
    <title>OSS short course at ERAD 2018</title>
    <updated>2018-05-24T00:00:00+00:00</updated>
    <author>
      <name>openradar</name>
    </author>
    <content type="html">&lt;div class="ablog-post-excerpt docutils container"&gt;
&lt;p&gt;We will feature another 1-day open source software course on July 1st, 2018, at the &lt;a class="reference external" href="https://www.erad2018.nl/"&gt;10th European Conference on Radar in Meteorology and Hydrology&lt;/a&gt;. If you have not registered, yet… maybe a late-bird registration is still possible! See &lt;a class="reference external" href="http://openradarscience.org/erad2018/"&gt;here&lt;/a&gt; for further details.&lt;/p&gt;
&lt;/div&gt;
</content>
    <link href="openradarscience.org/posts/2018/announce_erad2018/" rel="alternate"/>
    <summary>We will feature another 1-day open source software course on July 1st, 2018, at the 10th European Conference on Radar in Meteorology and Hydrology. If you have not registered, yet… maybe a late-bird registration is still possible! See here for further details.</summary>
    <category term="course" label="course"/>
    <category term="news" label="news"/>
    <published>2018-05-24T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>openradarscience.org/posts/2018/andopendata/</id>
    <title>Open source - a necessary, not a sufficient criterion</title>
    <updated>2018-05-24T00:00:00+00:00</updated>
    <author>
      <name>openradar</name>
    </author>
    <content type="html">&lt;div class="ablog-post-excerpt docutils container"&gt;
&lt;p&gt;We are aware that open source software is only one component of open science: consider it a necessary, not a sufficient condition to make research transparent and reproducible. It should come along with efforts to also make radar data open.&lt;/p&gt;
&lt;p&gt;That is why we will also try to collect information about open access to weather radar data products. Can you help us? Have a look at our &lt;a class="reference internal" href="../pages/opendata/"&gt;&lt;span class="doc std std-doc"&gt;open data page&lt;/span&gt;&lt;/a&gt;, and report open data repositories!&lt;/p&gt;
&lt;/div&gt;
</content>
    <link href="openradarscience.org/posts/2018/andopendata/" rel="alternate"/>
    <summary>We are aware that open source software is only one component of open science: consider it a necessary, not a sufficient condition to make research transparent and reproducible. It should come along with efforts to also make radar data open.That is why we will also try to collect information about open access to weather radar data products. Can you help us? Have a look at our open data page, and report open data repositories!</summary>
    <category term="data" label="data"/>
    <category term="news" label="news"/>
    <published>2018-05-24T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>openradarscience.org/posts/packages/radx/</id>
    <title>Radx</title>
    <updated>2018-05-24T00:00:00+00:00</updated>
    <author>
      <name>openradar</name>
    </author>
    <content type="html">&lt;div class="ablog-post-excerpt docutils container"&gt;
&lt;p&gt;The Radx C++ package was developed at NCAR to provide support for the new CfRadial radar data format, and to provide translation between common radar data formats. Radx is designed to be run on LINUX and MacOSX platforms, but should also run on Windows under Cygwin. It comprises a C++ library, which may be used by developers, and a number of applications built on that library.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://ral.ucar.edu/projects/titan/docs/radial_formats/radx.html"&gt;https://ral.ucar.edu/projects/titan/docs/radial_formats/radx.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content>
    <link href="openradarscience.org/posts/packages/radx/" rel="alternate"/>
    <summary>The Radx C++ package was developed at NCAR to provide support for the new CfRadial radar data format, and to provide translation between common radar data formats. Radx is designed to be run on LINUX and MacOSX platforms, but should also run on Windows under Cygwin. It comprises a C++ library, which may be used by developers, and a number of applications built on that library.https://ral.ucar.edu/projects/titan/docs/radial_formats/radx.html</summary>
    <category term="devel" label="devel"/>
    <category term="project" label="project"/>
    <published>2018-05-24T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>openradarscience.org/posts/packages/baltrad/</id>
    <title>BALTRAD</title>
    <updated>2018-05-28T00:00:00+00:00</updated>
    <author>
      <name>openradar</name>
    </author>
    <content type="html">&lt;div class="ablog-post-excerpt docutils container"&gt;
&lt;p&gt;BALTRAD offers software for exchanging weather radar data in real time, and processing data using a common “toolbox” of algorithms. The data exchange functionality can be used stand-alone, as can the toolbox. While the focus is on creating an operational system, the design is also intended to help bridge the gap between research and operational communities.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://baltrad.eu"&gt;http://baltrad.eu&lt;/a&gt;&lt;/p&gt;
&lt;img alt="baltrad sample image" src="../_images/BALTRAD-logo-small.png" /&gt;
&lt;/div&gt;
</content>
    <link href="openradarscience.org/posts/packages/baltrad/" rel="alternate"/>
    <summary>BALTRAD offers software for exchanging weather radar data in real time, and processing data using a common “toolbox” of algorithms. The data exchange functionality can be used stand-alone, as can the toolbox. While the focus is on creating an operational system, the design is also intended to help bridge the gap between research and operational communities.http://baltrad.eubaltrad sample image</summary>
    <category term="devel" label="devel"/>
    <category term="project" label="project"/>
    <published>2018-05-28T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>openradarscience.org/posts/packages/arm-pyart/</id>
    <title>ARM Py-ART</title>
    <updated>2018-05-31T00:00:00+00:00</updated>
    <author>
      <name>openradar</name>
    </author>
    <content type="html">&lt;div class="ablog-post-excerpt docutils container"&gt;
&lt;p&gt;The Python ARM Radar Toolkit, Py-ART, is an open source Python module containing a growing collection of weather radar algorithms and utilities build on top of the Scientific Python stack and distributed under the 3-Clause BSD license. Py-ART is used by the Atmospheric Radiation Measurement (ARM) Climate Research Facility for working with data from a number of precipitation and cloud radars, but has been designed so that it can be used by others in the radar and atmospheric communities to examine, processes, and analyse data from many types of weather radars.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://arm-doe.github.io/pyart/"&gt;http://arm-doe.github.io/pyart/&lt;/a&gt;&lt;/p&gt;
&lt;img alt="pyart sample image" src="../_images/pyart_sample_plot.png" /&gt;
&lt;/div&gt;
</content>
    <link href="openradarscience.org/posts/packages/arm-pyart/" rel="alternate"/>
    <summary>The Python ARM Radar Toolkit, Py-ART, is an open source Python module containing a growing collection of weather radar algorithms and utilities build on top of the Scientific Python stack and distributed under the 3-Clause BSD license. Py-ART is used by the Atmospheric Radiation Measurement (ARM) Climate Research Facility for working with data from a number of precipitation and cloud radars, but has been designed so that it can be used by others in the radar and atmospheric communities to examine, processes, and analyse data from many types of weather radars.http://arm-doe.github.io/pyart/pyart sample image</summary>
    <category term="devel" label="devel"/>
    <category term="project" label="project"/>
    <published>2018-05-31T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>openradarscience.org/posts/packages/pysteps/</id>
    <title>pysteps</title>
    <updated>2018-08-10T00:00:00+00:00</updated>
    <author>
      <name>PySteps developers</name>
    </author>
    <content type="html">&lt;div class="ablog-post-excerpt docutils container"&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pysteps.github.io/"&gt;pysteps&lt;/a&gt; is a community that develops and maintains an easy to use, modular and open source python framework for precipitation short-term ensemble prediction systems.&lt;/p&gt;
&lt;p&gt;&lt;img alt="pysteps sample image" src="posts/packages/%7Bfilename%7D../images/pysteps_sample.png" /&gt;&lt;/p&gt;
&lt;img alt="pysteps sample image" src="posts/packages/%7Bfilename%7D../images/pysteps_sample.png" /&gt;
&lt;/div&gt;
</content>
    <link href="openradarscience.org/posts/packages/pysteps/" rel="alternate"/>
    <summary>pysteps is a community that develops and maintains an easy to use, modular and open source python framework for precipitation short-term ensemble prediction systems.pysteps sample imagepysteps sample image</summary>
    <category term="devel" label="devel"/>
    <category term="nowcasting" label="nowcasting"/>
    <category term="opticalflow" label="opticalflow"/>
    <category term="project" label="project"/>
    <published>2018-08-10T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>openradarscience.org/posts/packages/rainymotion/</id>
    <title>rainymotion</title>
    <updated>2018-08-28T00:00:00+00:00</updated>
    <author>
      <name>Georgy Ayzel</name>
    </author>
    <content type="html">&lt;div class="ablog-post-excerpt docutils container"&gt;
&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;rainymotion&lt;/span&gt;&lt;/code&gt; is a Python library for radar-based precipitation nowcasting based on optical flow techniques. The main idea is to provide a stack of open models which can serve as a transparent benchmark for further development of nowcasting techniques. An extensive verification study in Germany has shown that the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;rainymotion&lt;/span&gt;&lt;/code&gt; models based on Dense optical flow are at least equivalent if not superior to state-of-the-art operational nowcasting techniques.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://rainymotion.readthedocs.io"&gt;https://rainymotion.readthedocs.io&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content>
    <link href="openradarscience.org/posts/packages/rainymotion/" rel="alternate"/>
    <summary>rainymotion is a Python library for radar-based precipitation nowcasting based on optical flow techniques. The main idea is to provide a stack of open models which can serve as a transparent benchmark for further development of nowcasting techniques. An extensive verification study in Germany has shown that the rainymotion models based on Dense optical flow are at least equivalent if not superior to state-of-the-art operational nowcasting techniques.https://rainymotion.readthedocs.io</summary>
    <category term="devel" label="devel"/>
    <category term="nowcasting" label="nowcasting"/>
    <category term="opticalflow" label="opticalflow"/>
    <category term="project" label="project"/>
    <published>2018-08-28T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>openradarscience.org/posts/packages/pyrad/</id>
    <title>Pyrad</title>
    <updated>2021-06-30T00:00:00+00:00</updated>
    <author>
      <name>MeteoSwiss/Météo-France</name>
    </author>
    <content type="html">&lt;div class="ablog-post-excerpt docutils container"&gt;
&lt;p&gt;Pyrad is a real-time (and off-line) data processing framework developed by MeteoSwiss and MeteoFrance. The framework is aimed at processing and visualizing polar data from individual weather radars as well as composite Cartesian products both off-line and in real time. It is written in the Python language.&lt;/p&gt;
&lt;p&gt;It is capable of ingesting data stored in the most common radar data formats, e.g. C/FRadial, ODIM, Rainbow, NEXRAD level-2 among others.&lt;/p&gt;
&lt;/div&gt;
</content>
    <link href="openradarscience.org/posts/packages/pyrad/" rel="alternate"/>
    <summary>Pyrad is a real-time (and off-line) data processing framework developed by MeteoSwiss and MeteoFrance. The framework is aimed at processing and visualizing polar data from individual weather radars as well as composite Cartesian products both off-line and in real time. It is written in the Python language.It is capable of ingesting data stored in the most common radar data formats, e.g. C/FRadial, ODIM, Rainbow, NEXRAD level-2 among others.</summary>
    <category term="devel" label="devel"/>
    <category term="project" label="project"/>
    <published>2021-06-30T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>openradarscience.org/posts/packages/pyscancf/</id>
    <title>PyScanCf</title>
    <updated>2022-07-21T00:00:00+00:00</updated>
    <author>
      <name>openradar</name>
    </author>
    <content type="html">&lt;div class="ablog-post-excerpt docutils container"&gt;
&lt;p&gt;PyScanCf – The Open Source Python based Library for Indian Meteorological Department (IMD) Doppler Weather Radar Datasets. This package provides a Python framework for working with single sweep radar data, from which sophisticated workflows can be constructed and used as input to Python based open-source softwares for processing radar
data like as Py-ART, and Wradlib.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://syedhamidali.github.io/PyScanCf"&gt;https://syedhamidali.github.io/PyScanCf&lt;/a&gt;&lt;/p&gt;
&lt;img alt="PyScanCf sample image" src="../_images/pyscancf_sample.jpg" /&gt;
&lt;/div&gt;
</content>
    <link href="openradarscience.org/posts/packages/pyscancf/" rel="alternate"/>
    <summary>PyScanCf – The Open Source Python based Library for Indian Meteorological Department (IMD) Doppler Weather Radar Datasets. This package provides a Python framework for working with single sweep radar data, from which sophisticated workflows can be constructed and used as input to Python based open-source softwares for processing radar
data like as Py-ART, and Wradlib.https://syedhamidali.github.io/PyScanCfPyScanCf sample image</summary>
    <category term="IMD" label="IMD"/>
    <category term="project" label="project"/>
    <category term="radar" label="radar"/>
    <published>2022-07-21T00:00:00+00:00</published>
  </entry>
</feed>
